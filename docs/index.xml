<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>JerryLogs</title><link>https://jerrypan617.github.io/</link><description>Recent content on JerryLogs</description><generator>Hugo -- 0.148.2</generator><language>en-us</language><lastBuildDate>Wed, 30 Jul 2025 15:20:50 +0800</lastBuildDate><atom:link href="https://jerrypan617.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Scaled Dot-Product Attention</title><link>https://jerrypan617.github.io/posts/my-new-post/</link><pubDate>Wed, 30 Jul 2025 15:20:50 +0800</pubDate><guid>https://jerrypan617.github.io/posts/my-new-post/</guid><description>&lt;p>The Self Attention Mechanism (SA) is a fundamental part of the Transformer model, which is universally applied in large language models. Below is my view of how SA works, and why it works.&lt;/p>
&lt;p>&lt;img alt="Self attention mechanism" loading="lazy" src="https://jerrypan617.github.io/images/self_attention.png" title="Self attention mechanism">&lt;/p>
&lt;p>The basic structure of SA is shown above. Given a embedded input vector $X$, we apply $3$ learnable linear layers: $W_Q, W_K$ and $W_V$, to generate three new output vectors: Query, Key and Value. This process can be represented as:&lt;/p></description></item><item><title>About Me</title><link>https://jerrypan617.github.io/about/</link><pubDate>Wed, 30 Jul 2025 11:59:27 +0800</pubDate><guid>https://jerrypan617.github.io/about/</guid><description>&lt;p>Hello! I&amp;rsquo;m Jerry, and welcome to my corner of the internet. I&amp;rsquo;m passionate about Large Language Models, Reinforcement Learning from Human Feedback (RLHF) and Multi-modal learning.&lt;/p>
&lt;h2 id="informations">Informations&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Educational BG:&lt;/strong> Hefei University of Technology | Major in CS | Undergraduate&lt;/li>
&lt;/ul>
&lt;h2 id="skills">Skills&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Languages:&lt;/strong> Python, C++&lt;/li>
&lt;li>&lt;strong>AI/ML:&lt;/strong> PyTorch, Transformers, TRL&lt;/li>
&lt;/ul>
&lt;h2 id="projects">Projects&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>AFDNet:&lt;/strong> A UNet-based framework for single image de-raining.&lt;a href="https://github.com/jerrypan617/AFDNet">project link&lt;/a>&lt;/li>
&lt;li>&lt;strong>LightLlama:&lt;/strong> A light-weight Llama implementation from scratch.&lt;a href="https://github.com/jerrypan617/LightLlama">project link&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="contact">Contact&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Email:&lt;/strong> 2022217940 AT mail.hfut.edu.cn&lt;/li>
&lt;li>&lt;strong>GitHub:&lt;/strong> &lt;a href="https://github.com/jerrypan617">Jerry Pan&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Test blog</title><link>https://jerrypan617.github.io/posts/my-first-post/</link><pubDate>Wed, 30 Jul 2025 11:44:07 +0800</pubDate><guid>https://jerrypan617.github.io/posts/my-first-post/</guid><description>&lt;h1 id="welcome-to-jerrylog">Welcome to JerryLog&lt;/h1>
&lt;p>This is a test blog.&lt;/p></description></item></channel></rss>